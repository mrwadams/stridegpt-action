name: GitHub Action Tests

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'src/**'
      - 'tests/**'
      - 'requirements.txt'
      - 'pytest.ini'
      - '.github/workflows/test.yml'
      - 'entrypoint.py'
      - 'action.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'src/**'
      - 'tests/**'
      - 'requirements.txt'
      - 'pytest.ini'
      - '.github/workflows/test.yml'
      - 'entrypoint.py'
      - 'action.yml'

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest-cov
    
    - name: Run linting
      run: |
        # Install flake8 if not in requirements
        pip install flake8
        flake8 src --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 src --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Run formatting check
      run: |
        # Install black if not in requirements
        pip install black
        black --check src entrypoint.py
    
    - name: Run tests
      run: |
        pytest tests/ -v --cov=src --cov-report=xml
    
    - name: Upload coverage to Codecov
      if: matrix.python-version == '3.11'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: action
        name: codecov-action
        fail_ci_if_error: false
    
    - name: Test action integration
      if: matrix.python-version == '3.11'
      env:
        STRIDE_API_KEY: ${{ secrets.STRIDE_API_KEY || 'sk_test_dummy_key_for_testing' }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        TRIGGER_MODE: manual
        GITHUB_REPOSITORY: ${{ github.repository }}
        GITHUB_EVENT_NAME: workflow_dispatch
      run: |
        # Test that the action can start without errors
        timeout 30s python entrypoint.py || true
        echo "Action integration test completed"

  action-test:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Test Action on Self
      uses: ./
      with:
        stride-api-key: ${{ secrets.STRIDE_API_KEY || 'sk_test_dummy_key_for_testing' }}
        github-token: ${{ secrets.GITHUB_TOKEN }}
        trigger-mode: manual
      continue-on-error: true  # Don't fail CI if analysis fails
    
    - name: Verify Action Outputs
      run: |
        echo "Action completed - checking outputs would go here"
        # In a real scenario, you'd verify the action outputs